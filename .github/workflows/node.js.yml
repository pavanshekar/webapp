name: Node.js CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    if: >
      (github.event_name == 'push' && github.repository == 'NEU-Cloud-CSYE6225/webapp') ||
      (github.event_name == 'pull_request')

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.DB_PASSWORD }}
          MYSQL_DATABASE: ${{ secrets.DB_DATABASE }}
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    
    defaults:
      run:
        working-directory: ./AssignmentsAPI/
    
    strategy:
      matrix:
        node-version:
          - 16.x

    steps:
      - uses: actions/checkout@v3
      
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: ./AssignmentsAPI/package-lock.json

      - name: Create .env
        run: |
          echo PORT=${{ secrets.PORT }} >> .env
          echo DB_HOST=localhost >> .env
          echo DB_PORT=${{ secrets.DB_PORT }} >> .env
          echo DB_USER=${{ secrets.DB_USER }} >> .env
          echo DB_PASSWORD=${{ secrets.DB_PASSWORD }} >> .env
          echo DB_DATABASE=${{ secrets.DB_DATABASE }} >> .env
          echo SECRET_KEY=${{ secrets.SECRET_KEY }} >> .env
      
      - name: Install Dependencies
        run: npm ci

      - name: Build
        run: npm run build --if-present

      - name: Run Tests
        run: npm test

